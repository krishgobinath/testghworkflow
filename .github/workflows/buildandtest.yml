name: BuildAndRunAutomatedTest
on: [push, workflow_dispatch]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: read config
        id: packager
        uses: juliangruber/read-file-action@v1
        with:
          path: './info.json'          
      - name: Remove newline character
        id: set-matrixx
        run: |
          file_content=$(echo "${{ steps.packager.outputs.content }}")
          trimmed_content=$(echo -n "$file_content" | tr -d '\n')
          echo "before trim:"
          echo "$file_content"                    
          echo "Content after trim:"
          echo "$trimmed_content"                 
          echo "::set-output name=mat::$trimmed_content"
      - id: set-matrix
        # run: echo "::set-output name=matrix::{\"configs\":[\"miner1.json\",\"miner2.json\"]}"
        run: echo "::set-output name=matrix::{"configs":["miner1.json","miner2.json"]}"
      - name: Echoo json
        run: |
          #echo hello woorld!
          #echo hello woorld1!
          # echo "${{ steps.set-matrix.outputs.matrix }}"
          echo "${{ fromJSON(steps.set-matrix.outputs.matrix) }}"

  job2:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      # matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
      matrix: ${{ needs.job1.outputs.matrix }}
    steps:
      - run: echo Hello, world!
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: read config
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: './info.json'          
      - name: Remove newline character
        id: parse-json-trim
        run: |
          file_content=$(echo "${{ steps.package.outputs.content }}")
          trimmed_content=$(echo -n "$file_content" | tr -d '\n')
          echo "before trim:"
          echo "$file_content"                    
          echo "Content after trim:"
          echo "$trimmed_content"       
          echo "::set-output name=minerconfigs::$trimmed_content"
          echo "${{ steps.parse-json-trim.outputs.minerconfigs }}"
      - name: Echo json
        run: |
          echo "${{ steps.parse-json-trim.outputs.minerconfigs }}"      
